<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JQuery的一些简单使用]]></title>
    <url>%2F2018%2F04%2F13%2FJQuery%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[使用JQuery实现一些小功能，包括表格隔行换色，选项框全选全不选 一、使用JQ完成表格的隔行换色1.需求分析在页面加载的时候让显示用户的表格进行隔行换色显示，效果如下：使用JQ实现 2.技术分析需要使用jquery的选择器(基本选择器、基本过滤选择器)还需要使用jquery的CSS的方法(css(name,value))如果CSS样式已经由美工写好，此时可以使用jquery的CSS类操作 3.步骤分析第一步：引入jquery的类库第二步：直接写页面加载函数第三步：直接使用jquery的选择器(组合选择)拿到需要操作的元素(奇数行和偶数行)第四步：分别使用CSS的方法(css(name,value))对奇数行和偶数行设置背景颜色。 4.代码实现12345678&lt;script type=&quot;text/javascript&quot; src=&quot;../js/jquery-1.8.3.js&quot; &gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../css/style.css&quot;/&gt;&lt;script&gt; $(function()&#123; $(&quot;tbody tr:even&quot;).addClass(&quot;even&quot;); $(&quot;tbody tr:odd&quot;).addClass(&quot;odd&quot;); &#125;);&lt;/script&gt; 二、使用JQ完成全选和全不选1.需求分析在系统后台进行人员管理时，进行批量删除，使用jq完成全选和全不选 2.技术分析需要使用jquery的选择器(id选择器、类选择器)需要使用jquery的属性操作方法 prop() 3.步骤分析第一步：引入jquery文件第二步：书写页面加载函数第三步：为上面的复选框绑定单击事件第四步：将下面所有的复选框的选中状态设置成跟上面的一致！ 4.代码实现123456789101112&lt;script type=&quot;text/javascript&quot; src=&quot;../js/jquery-1.8.3.js&quot; &gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; //找到下面所有的复选框并设置属性checked() /*if($(&quot;#select&quot;)[0].checked==true)&#123; $(&quot;.selectOne&quot;).attr(&quot;checked&quot;,true) &#125;*/ $(&quot;#select&quot;).click(function()&#123; $(&quot;.selectOne&quot;).attr(&quot;checked&quot;,this.checked); &#125;); &#125;);&lt;/script&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>JQuery</category>
      </categories>
      <tags>
        <tag>JQuery</tag>
        <tag>页面</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx入门]]></title>
    <url>%2F2018%2F04%2F13%2FNginx%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Nginx入门 一.Nginx简介Nginx是一款高性能的http 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器。由俄罗斯的程序设计师Igor Sysoev所开发，官方测试nginx能够支支撑5万并发链接，并且cpu、内存等资源消耗却非常低，运行非常稳定 Nginx的主要应用1，Nginx可以用来做http服务器。Nginx可以独立提供http服务，可以做网页静态服务器2，Nginx可以用来做虚拟主机，实现在一台服务器虚拟出多个网站，例如个人网站使用的虚拟主机3，Nginx可以用来提供反向代理，负载均衡功能。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用Nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况 二.Nginx实现反向代理2.1 反向代理的含义常见的服务器一般采用正向代理的方式，如下图所示： 通常的代理服务器，只用于代理内部网络对Internet的连接请求，客户机必须指定代理服务器,并将本来要直接发送到Web服务器上的http请求发送到代理服务器中。由于外部网络上的主机并不会配置并使用这个代理服务器，普通代理服务器也被设计为在Internet上搜寻多个不确定的服务器,而不是针对Internet上多个客户机的请求访问某一个固定的服务器，因此普通的Web代理服务器不支持外部对内部网络的访问请求 当一个代理服务器能够代理外部网络上的主机（如Nginx），访问内部网络时，这种代理服务的方式称为反向代理服务。此时代理服务器对外就表现为一个Web服务器，外部网络就可以简单把它当作一个标准的Web服务器而不需要特定的配置。不同之处在于，这个服务器没有保存任何网页的真实数据，所有的静态网页或者CGI程序，都保存在内部的Web服务器上 反向代理的实现方式如下图所示： 2.2 简单模拟一个反向代理的实现反向代理模拟：两个域名指向同一台nginx服务器，用户访问不同的域名显示不同的网页内容。两个域名是www.sian.com.cn和www.sohu.comnginx服务器使用虚拟机192.168.101.3 实现方式：第一步：安装两个tomcat，分别运行在8080和8081端口。第二步：启动两个tomcat。第三步：反向代理服务器的配置 1234567891011121314151617181920212223242526272829303132upstream tomcat1 &#123; server 192.168.25.148:8080; &#125; server &#123; listen 80; server_name www.sina.com.cn; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; proxy_pass http://tomcat1; index index.html index.htm; &#125; &#125; upstream tomcat2 &#123; server 192.168.25.148:8081; &#125; server &#123; listen 80; server_name www.sohu.com; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; proxy_pass http://tomcat2; index index.html index.htm; &#125; &#125; 第四步：nginx重新加载配置文件第五步：配置域名在hosts文件中添加域名和ip的映射关系 12192.168.25.148 www.sina.com.cn192.168.25.148 www.sohu.com 三.Nginx实现负载均衡3.1 Nginx实现负载均衡的基本原理如果一个服务由多条服务器提供，需要把负载分配到不同的服务器处理，需要负载均衡处理Nginx配置文件：1234upstream tomcat2 &#123;server 192.168.25.148:8081;server 192.168.25.148:8082; &#125; 可以根据服务器的实际情况调整服务器权重。权重越高分配的请求越多，权重越低，请求越少。默认是都是1 1234upstream tomcat2 &#123;server 192.168.25.148:8081;server 192.168.25.148:8082 weight=2; &#125; 3.2 Nginx实现负载均衡的具体方法具体方案Nginx作为负载均衡器，所有请求都到了Nginx，可见Nginx处于非常重点的位置，如果Nginx服务器宕机后端web服务将无法提供服务，影响严重。为了屏蔽负载均衡服务器的宕机，需要建立一个备份机。主服务器和备份机上都运行高可用（High Availability）监控程序，通过传送诸如“I am alive”这样的信息来监控对方的运行状况。当备份机不能在一定的时间内收到这样的信息时，它就接管主服务器的服务IP并继续提供负载均衡服务；当备份管理器又从主管理器收到“I am alive”这样的信息时，它就释放服务IP地址，这样的主服务器就开始再次提供负载均衡服务。 keepalivedkeepalived简介keepalived是集群管理中保证集群高可用的一个服务软件，用来防止单点故障。 Keepalived的作用是检测web服务器的状态，如果有一台web服务器死机，或工作出现故障，Keepalived将检测到，并将有故障的web服务器从系统中剔除，当web服务器工作正常后Keepalived自动将web服务器加入到服务器群中，这些工作全部自动完成，不需要人工干涉，需要人工做的只是修复故障的web服务器。 keepalived工作原理keepalived是以VRRP协议为实现基础的，VRRP全称Virtual Router Redundancy Protocol，即虚拟路由冗余协议。虚拟路由冗余协议，可以认为是实现路由器高可用的协议，即将N台提供相同功能的路由器组成一个路由器组，这个组里面有一个master和多个backup，master上面有一个对外提供服务的vip（VIP = Virtual IP Address，虚拟IP地址，该路由器所在局域网内其他机器的默认路由为该vip），master会发组播，当backup收不到VRRP包时就认为master宕掉了，这时就需要根据VRRP的优先级来选举一个backup当master。这样的话就可以保证路由器的高可用了。keepalived主要有三个模块，分别是core、check和VRRP。core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。check负责健康检查，包括常见的各种检查方式。VRRP模块是来实现VRRP协议的。 负载均衡示意图正常工作时： 发生主机宕机等意外情况时： 主机故障排除后：]]></content>
      <categories>
        <category>Nginx服务器</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统Tomcat无法正常启动]]></title>
    <url>%2F2018%2F04%2F13%2FCentOS7.3%E7%B3%BB%E7%BB%9FTomcat%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%90%AF%E5%8A%A8%E8%A7%A3%E5%86%B3%EF%BC%888005%E7%AB%AF%E5%8F%A3%E4%B8%8D%E8%83%BD%E5%90%AF%E5%8A%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[我今天在阿里云买了一个服务器，使用CentOS7系统，在安装Tomcat是遇到错误排查了很长时间，在这里将错误总结记叙一下Linux系统CentOS7.3版中启动Tomcat7，确定JDK正常运行且配置正确的情况下，启动Tomcat始终无法正常访问 排错过程：第一步：关闭Tomcat，使用端口查看命令netstat -tunlp查看 发现8080端口，8009端口，8005端口均为被占用 第二步：启动Tomcat，使用端口查看命令netstat -tunlp查看，发现8080端口，8009端口正常启动，没有发现8005端口，使用netstat -tunlp|grep 8005命令查看，确定8005端口没有被占用，所以一定是8005端口是没有正常启动 解决办法：需要修改文件：$JAVA_HOME/jre/lib/security/java.security中的配置使用vi编辑器打开文件 将：securerandom.source=file:/dev/random改为： securerandom.source=file:/dev/urandom 注：可以使用/securerandom.source查找，n表示下一目标位置 重启Tomcat，发现3个端口均正常启动]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Linux</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
</search>
